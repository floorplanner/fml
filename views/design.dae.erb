<?xml version="1.0"?>
<COLLADA xmlns="http://www.collada.org/2005/11/COLLADASchema" version="1.4.1">
  <asset>
    <contributor>
      <author>john doe &lt;johnny@floorplanner.com&gt;</author>
    </contributor>
    <created>2006-06-21T21:23:22Z</created>
    <modified>2006-06-21T21:23:22Z</modified>
    <unit meter="1.00" name="meter"/>
    <up_axis>Z_UP</up_axis>
    </asset>
  <library_cameras>
    <camera id="main-cam">
      <optics>
        <technique_common>
          <perspective>
            <yfov>70</yfov>
            <znear>0.1</znear>
            <zfar>100.0</zfar>
          </perspective>
        </technique_common>
      </optics>
    </camera>
  </library_cameras>
  <library_lights>
    <light id="sun">
      <technique_common>
        <directional>
          <color>1 1 1</color>
        </directional>
      </technique_common>
    </light>
  </library_lights>
  <library_materials id="surrounding-materials">
    <material id="walls-material" name="WallsMaterial">
      <instance_effect url="#walls-fx"/>
    </material>
    <% @areas.each do |area_mesh| %>
      <material id="area_<%= area_mesh.data[:id] %>-material">
        <instance_effect url="#area_<%= area_mesh.data[:id] %>-fx"/>
      </material>
    <% end %>
    <% @assets.each_value do |asset| %>
      <% asset.library_materials.each do |materials| %>
        <%= materials.to_s %>
      <% end %>
    <% end %>
  </library_materials>
  <library_effects id="surrounding-effects">
    <effect id="walls-fx">
      <profile_COMMON>
        <technique sid="blender">
          <phong>
            <emission>
              <color>0.05 0.05 0.05 1</color>
            </emission>
            <ambient>
              <color>0.15 0.15 0.15 1</color>
            </ambient>
            <diffuse>
              <color>0.9 0.9 0.9 1</color>
            </diffuse>
            <specular>
              <color>0 0 0 1</color>
            </specular>
            <shininess>
              <float>0.0</float>
            </shininess>
            <reflective>
              <color>1 1 1 1</color>
            </reflective>
            <reflectivity>
              <float>0.0</float>
            </reflectivity>
            <transparent>
              <color>1 1 1 1</color>
            </transparent>
            <transparency>
              <float>0.0</float>
            </transparency>
          </phong>
        </technique>
      </profile_COMMON>
    </effect>
    <% @areas.each do |area_mesh| %>
      <effect id="area_<%= area_mesh.data[:id] %>-fx">
        <profile_COMMON>
          <technique sid="blender">
            <phong>
              <emission>
                <color>0.05 0.05 0.05 1</color>
              </emission>
              <ambient>
                <color>0.1 0.1 0.1 1</color>
              </ambient>
              <diffuse>
                <color><%= area_mesh.data[:color].join(' ') %> 1</color>
              </diffuse>
              <specular>
                <color>0 0 0 1</color>
              </specular>
              <shininess>
                <float>0.0</float>
              </shininess>
              <reflective>
                <color>1 1 1 1</color>
              </reflective>
              <reflectivity>
                <float>0.0</float>
              </reflectivity>
              <transparent>
                <color>1 1 1 1</color>
              </transparent>
              <transparency>
                <float>0.0</float>
              </transparency>
            </phong>
          </technique>
        </profile_COMMON>
      </effect>
    <% end %>
    <% @assets.each_value do |asset| %>
      <% asset.library_effects.each do |effects| %>
        <%= effects.to_s %>
      <% end %>
    <% end %>
  </library_effects>
  <library_images>
    <% @assets.each_value do |asset| %>
      <% asset.library_images.each do |image| %>
        <%= image.to_s %>
      <% end %>
    <% end %>
  </library_images>
  <library_geometries id="surrounding-geometry">
    <geometry id="walls-geom" name="WallsGeometry">
      <mesh>
        <source id="walls-positions" name="position">
          <float_array id="walls-positions-array" count="<%= @walls.vertices.length*3 %>">
            <%= @walls.vertices.collect {|v| v.to_floats }.join(' ') %>
          </float_array>

          <technique_common>
            <accessor count="<%= @walls.vertices.length %>" offset="0" source="#walls-positions-array" stride="3">
              <param name="X" type="float"></param>
              <param name="Y" type="float"></param>
              <param name="Z" type="float"></param>
            </accessor>
          </technique_common>
        </source>
        <source id="walls-normals" name="normal">

          <float_array id="walls-normals-array" count="<%= @walls.faces.length*3 %>">
            <%= @walls.faces.collect{|f| [f.normal.x,f.normal.y,f.normal.z]}.flatten.join(' ') %>
          </float_array>

          <technique_common>
            <accessor count="<%= @walls.faces.length %>" offset="0" source="#walls-normals-array" stride="3">
              <param name="X" type="float"></param>
              <param name="Y" type="float"></param>
              <param name="Z" type="float"></param>
            </accessor>
          </technique_common>
        </source>

        <vertices id="walls-vertices">
          <input semantic="POSITION" source="#walls-positions"/>
        </vertices>

        <triangles count="<%= @walls.faces.length %>" material="Walls">
           <input semantic="VERTEX" source="#walls-vertices" offset="0"/>
           <p>
             <%= @walls.faces.collect{|f| f.vertices.collect{|v| @walls.vertices.index(v)}}.flatten.join(' ') %>
           </p>
        </triangles>
      </mesh>
    </geometry>
    <% @areas.each do |area_mesh|; id = area_mesh.data[:id] %>
      <geometry id="area_<%= id %>-geom" name="Area_<%= id %>-Geometry">
        <mesh>
          <source id="area_<%= id %>-positions" name="position">

            <float_array id="area_<%= id %>-positions-array" count="<%= area_mesh.vertices.length*3 %>">
              <%= area_mesh.vertices.collect {|v| v.to_floats }.join(' ') %>
            </float_array>

            <technique_common>
              <accessor count="<%= area_mesh.vertices.length %>" offset="0" source="#area_<%= id %>-positions-array" stride="3">
                <param name="X" type="float"></param>
                <param name="Y" type="float"></param>
                <param name="Z" type="float"></param>
              </accessor>
            </technique_common>
          </source>
          <source id="area_<%= id %>-normals" name="normal">

            <float_array id="area_<%= id %>-normals-array" count="<%= area_mesh.faces.length*3 %>">
              <%= area_mesh.faces.collect{|f| [f.normal.x,f.normal.y,f.normal.z]}.flatten.join(' ') %>
            </float_array>

            <technique_common>
              <accessor count="<%= area_mesh.faces.length %>" offset="0" source="#area_<%= id %>-normals-array" stride="3">
                <param name="X" type="float"></param>
                <param name="Y" type="float"></param>
                <param name="Z" type="float"></param>
              </accessor>
            </technique_common>
          </source>

          <vertices id="area_<%= id %>-vertices">
            <input semantic="POSITION" source="#area_<%= id %>-positions"/>
          </vertices>

          <triangles count="<%= area_mesh.faces.length %>" material="Area_<%= id %>">
            <input semantic="VERTEX" source="#area_<%= id %>-vertices" offset="0"/>
             <p>
               <%= area_mesh.faces.collect{|f| f.vertices.collect{|v| area_mesh.vertices.index(v)}}.flatten.join(' ') %>
             </p>
          </triangles>
        </mesh>
      </geometry>
    <% end %>
    <% @assets.each_value do |asset| %>
      <% asset.library_geometries.each do |geometries| %>
        <%= geometries.to_s %>
      <% end %>
    <% end %>
  </library_geometries>
  <library_nodes>
    <% @assets.each_value do |asset| %>
      <% asset.library_nodes.each do |nodes| %>
        <%= nodes.to_s %>
      <% end %>
    <% end %>
  </library_nodes>
  <library_visual_scenes>
  <visual_scene id="VisualSceneNode" name="<%= @name %>">
      <extra>
        <technique sid="sunflow">
          <image>
            <resolution>800 600</resolution>
            <aa>0 2</aa>
            <filter>gaussian</filter>
          </image>
          <trace_depths>
            <diffuse>4</diffuse>
            <reflection>2</reflection>
          </trace_depths>
          <background>
            <color>1.0 1.0 1.0</color>
          </background>
          <gi>
            <type>ambocc</type>
            <bright>1 1 1</bright>
            <dark>0 0 0</dark>
            <samples>32</samples>
            <maxdist>3.0 </maxdist>
          </gi>
        </technique>
      </extra>
      <node id="Camera" name="Camera">
        <lookat>
          3.0 1.0 2.0
          1.0 4.0 1.8
          0.0 0.0 1.0
        </lookat>
        <instance_camera url="#main-cam"/>
      </node>
      <node id="SunLight" name="SunLight">
        <rotate sid="rotateZ">0 0 1 -45</rotate>
        <rotate sid="rotateY">0 1 0 0</rotate>
        <rotate sid="rotateX">1 0 0 22.5</rotate>
        <instance_light url="#sun"/>
      </node>
      <node id="Walls" name="Walls">
        <instance_geometry url="#walls-geom">
          <bind_material>
            <technique_common>
              <instance_material symbol="Walls" target="#walls-material"/>
            </technique_common>
          </bind_material>
        </instance_geometry>
      </node>
      <node id="Areas" name="Areas">
        <% @areas.each do |area_mesh|; id = area_mesh.data[:id] %>
          <node id="Area_<%= id %>" name="Area_<%= id %>">
            <instance_geometry url="#area_<%= id %>-geom">
              <bind_material>
                <technique_common>
                  <instance_material symbol="Area_<%= id %>" target="#area_<%= id %>-material"/>
                </technique_common>
              </bind_material>
            </instance_geometry>
          </node>
        <% end %>
      </node>
      <% @elements.each do |element| %>
        <node>
          <%= element[:asset].visual_scene_node.to_s  %>
          <translate><%= element[:position].to_floats %></translate>
          <% if element[:rotation].x > 0 %>
            <rotate sid="rotateX">1 0 0 <%= element[:rotation].x %></rotate>
          <% end %>
          <% if element[:rotation].y > 0 %>
            <rotate sid="rotateY">0 1 0 <%= element[:rotation].y %></rotate>
          <% end %>
          <% if element[:rotation].z > 0 %>
            <rotate sid="rotateZ">0 0 1 <%= element[:rotation].z %></rotate>
          <% end %>
          <scale><%= element[:scale].to_floats %></scale>
        </node>
      <% end %>
    </visual_scene>
  </library_visual_scenes>
  <scene>
    <instance_visual_scene url="#VisualSceneNode"/>
  </scene>
</COLLADA>
